{{template "base/head" .}}

<div class="page-content">
    <div class="container">
        <!-- Breadcrumb Navigation -->
        <nav class="breadcrumb-nav" aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="{{AppSubUrl}}/phantomkit">
                        <i class="octicon octicon-home"></i>
                        PhantomKit
                    </a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">
                    Dashboard
                </li>
            </ol>
        </nav>

        <!-- PhantomKit Dashboard Container -->
        <div id="phantomkit-dashboard">
            <!-- Loading State -->
            <div class="loading-state" v-if="!dashboardLoaded">
                <div class="loading-spinner">
                    <i class="octicon octicon-sync spin"></i>
                    <p>Loading PhantomKit Dashboard...</p>
                </div>
            </div>

            <!-- Dashboard Content -->
            <div v-else>
                <!-- Dashboard Header -->
                <div class="dashboard-header">
                    <div class="header-content">
                        <h1 class="dashboard-title">
                            <i class="octicon octicon-zap"></i>
                            PhantomKit Dashboard
                        </h1>
                        <p class="dashboard-subtitle">
                            Secure Code Storage & Runtime Management
                        </p>
                    </div>
                    
                    <!-- API Key Management -->
                    <div class="api-key-section">
                        <div class="api-key-input">
                            <input
                                v-model="apiKey"
                                type="password"
                                placeholder="Enter your PhantomKit API Key"
                                class="api-key-field"
                                @keyup.enter="validateApiKey"
                            />
                            <button @click="validateApiKey" class="btn btn-primary">
                                <i class="octicon octicon-key"></i>
                                Connect
                            </button>
                        </div>
                        <div v-if="isConnected" class="connection-status connected">
                            <i class="octicon octicon-check-circle"></i>
                            Connected to GitVault
                        </div>
                    </div>
                </div>

                <!-- Main Dashboard Content -->
                <div v-if="isConnected" class="dashboard-content">
                    <!-- Quick Actions -->
                    <div class="quick-actions">
                        <div class="action-card" @click="showNewProjectModal = true">
                            <i class="octicon octicon-plus"></i>
                            <h3>New Project</h3>
                            <p>Create a new PhantomKit project</p>
                        </div>
                        
                        <div class="action-card" @click="showUploadModal = true">
                            <i class="octicon octicon-upload"></i>
                            <h3>Upload Code</h3>
                            <p>Upload scripts and projects</p>
                        </div>
                        
                        <div class="action-card" @click="showImportModal = true">
                            <i class="octicon octicon-download"></i>
                            <h3>Import Project</h3>
                            <p>Import existing projects</p>
                        </div>
                        
                        <div class="action-card" @click="refreshProjects">
                            <i class="octicon octicon-sync"></i>
                            <h3>Refresh</h3>
                            <p>Update project list</p>
                        </div>
                    </div>

                    <!-- Projects Grid -->
                    <div class="projects-section">
                        <h2>Your Projects</h2>
                        <div v-if="loading" class="loading-spinner">
                            <i class="octicon octicon-sync spin"></i>
                            Loading projects...
                        </div>
                        
                        <div v-else-if="projects.length === 0" class="empty-state">
                            <i class="octicon octicon-repo"></i>
                            <h3>No projects yet</h3>
                            <p>Create your first project to get started with PhantomKit</p>
                            <button @click="showNewProjectModal = true" class="btn btn-primary">
                                Create Project
                            </button>
                        </div>
                        
                        <div v-else class="projects-grid">
                            <div
                                v-for="project in projects"
                                :key="project.id"
                                class="project-card"
                                @click="selectProject(project)"
                            >
                                <div class="project-header">
                                    <div class="project-icon">
                                        <i :class="getLanguageIcon(project.language)"></i>
                                    </div>
                                    <div class="project-info">
                                        <h3 class="project-name">{{`{{ project.name }}`}}</h3>
                                        <p class="project-description">{{`{{ project.description }}`}}</p>
                                    </div>
                                    <div class="project-status">
                                        <span :class="['status-badge', project.status]">
                                            {{`{{ project.status }}`}}
                                        </span>
                                    </div>
                                </div>
                                
                                <div class="project-details">
                                    <div class="detail-item">
                                        <i class="octicon octicon-code"></i>
                                        <span>{{`{{ project.scriptCount }}`}} scripts</span>
                                    </div>
                                    <div class="detail-item">
                                        <i class="octicon octicon-clock"></i>
                                        <span>Updated {{`{{ formatDate(project.updatedAt) }}`}}</span>
                                    </div>
                                </div>
                                
                                <div class="project-actions">
                                    <button @click.stop="viewProject(project)" class="btn btn-sm btn-outline">
                                        <i class="octicon octicon-eye"></i>
                                        View
                                    </button>
                                    <button @click.stop="runProject(project)" class="btn btn-sm btn-primary">
                                        <i class="octicon octicon-play"></i>
                                        Run
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Recent Activity -->
                    <div class="recent-activity">
                        <h2>Recent Activity</h2>
                        <div class="activity-list">
                            <div
                                v-for="activity in recentActivity"
                                :key="activity.id"
                                class="activity-item"
                            >
                                <div class="activity-icon">
                                    <i :class="getActivityIcon(activity.type)"></i>
                                </div>
                                <div class="activity-content">
                                    <p class="activity-text">{{`{{ activity.description }}`}}</p>
                                    <span class="activity-time">{{`{{ formatDate(activity.timestamp) }}`}}</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Connection Required State -->
                <div v-else class="connection-required">
                    <div class="connection-content">
                        <i class="octicon octicon-lock"></i>
                        <h2>Secure Access Required</h2>
                        <p>Connect with your PhantomKit API key to access your projects and scripts</p>
                        <div class="api-key-help">
                            <h4>How to get your API key:</h4>
                            <ol>
                                <li>Go to your GitVault account settings</li>
                                <li>Navigate to API Keys section</li>
                                <li>Generate a new PhantomKit API key</li>
                                <li>Copy and paste it above</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modals -->
<div id="phantomkit-modals">
    <!-- New Project Modal -->
    <div v-if="showNewProjectModal" class="modal-overlay" @click="showNewProjectModal = false">
        <div class="modal-content" @click.stop>
            <div class="modal-header">
                <h2>Create New Project</h2>
                <button @click="showNewProjectModal = false" class="close-btn">
                    <i class="octicon octicon-x"></i>
                </button>
            </div>
            
            <form @submit.prevent="createProject" class="modal-body">
                <div class="form-group">
                    <label for="project-name">Project Name *</label>
                    <input
                        id="project-name"
                        v-model="projectData.name"
                        type="text"
                        required
                        placeholder="my-awesome-project"
                        class="form-input"
                    />
                    <small>Use lowercase letters, numbers, and hyphens only</small>
                </div>
                
                <div class="form-group">
                    <label for="project-description">Description</label>
                    <textarea
                        id="project-description"
                        v-model="projectData.description"
                        placeholder="Describe what this project does..."
                        class="form-textarea"
                        rows="3"
                    ></textarea>
                </div>
                
                <div class="form-group">
                    <label for="project-language">Primary Language *</label>
                    <select
                        id="project-language"
                        v-model="projectData.language"
                        required
                        class="form-select"
                    >
                        <option value="">Select a language</option>
                        <option value="javascript">JavaScript</option>
                        <option value="typescript">TypeScript</option>
                        <option value="python">Python</option>
                        <option value="go">Go</option>
                        <option value="rust">Rust</option>
                        <option value="java">Java</option>
                        <option value="cpp">C++</option>
                        <option value="c">C</option>
                        <option value="php">PHP</option>
                        <option value="ruby">Ruby</option>
                        <option value="swift">Swift</option>
                        <option value="kotlin">Kotlin</option>
                        <option value="scala">Scala</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="project-visibility">Visibility</label>
                    <div class="radio-group">
                        <label class="radio-option">
                            <input
                                type="radio"
                                v-model="projectData.visibility"
                                value="private"
                                checked
                            />
                            <span class="radio-label">
                                <i class="octicon octicon-lock"></i>
                                Private
                            </span>
                            <small>Only you can see and access this project</small>
                        </label>
                        
                        <label class="radio-option">
                            <input
                                type="radio"
                                v-model="projectData.visibility"
                                value="public"
                            />
                            <span class="radio-label">
                                <i class="octicon octicon-globe"></i>
                                Public
                            </span>
                            <small>Anyone can view, but only you can modify</small>
                        </label>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="project-tags">Tags</label>
                    <input
                        id="project-tags"
                        v-model="projectData.tags"
                        type="text"
                        placeholder="api, microservice, ai, ml"
                        class="form-input"
                    />
                    <small>Separate tags with commas</small>
                </div>
                
                <div class="form-group">
                    <label class="checkbox-label">
                        <input
                            type="checkbox"
                            v-model="projectData.autoGenerateLoader"
                            checked
                        />
                        <span>Auto-generate loader files</span>
                    </label>
                    <small>Creates language-specific loader files for easy integration</small>
                </div>
                
                <div class="form-group">
                    <label class="checkbox-label">
                        <input
                            type="checkbox"
                            v-model="projectData.initializeGit"
                        />
                        <span>Initialize Git repository</span>
                    </label>
                    <small>Creates a Git repository for version control</small>
                </div>
                
                <div class="form-group">
                    <label class="checkbox-label">
                        <input
                            type="checkbox"
                            v-model="projectData.setupCI"
                        />
                        <span>Setup CI/CD pipeline</span>
                    </label>
                    <small>Creates GitHub Actions or GitLab CI configuration</small>
                </div>
            </form>
            
            <div class="modal-footer">
                <button @click="showNewProjectModal = false" class="btn btn-secondary">
                    Cancel
                </button>
                <button
                    @click="createProject"
                    :disabled="!isFormValid || creating"
                    class="btn btn-primary"
                >
                    <i v-if="creating" class="octicon octicon-sync spin"></i>
                    <span v-else>Create Project</span>
                </button>
            </div>
        </div>
    </div>
</div>

{{template "base/footer" .}}

<!-- PhantomKit Dashboard Scripts -->
<script type="module">
import { createApp } from 'vue'
import PhantomKitDashboard from '/web_src/js/components/PhantomKitDashboard.vue'

// Create Vue app
const app = createApp(PhantomKitDashboard)

// Mount the app
app.mount('#phantomkit-dashboard')
</script>

<!-- PhantomKit Dashboard Styles -->
<style>
/* Dashboard specific styles */
.phantomkit-dashboard {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
}

.dashboard-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 40px;
    padding: 30px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 12px;
    color: white;
}

.header-content h1 {
    margin: 0 0 10px 0;
    font-size: 2.5rem;
    font-weight: 700;
}

.dashboard-subtitle {
    margin: 0;
    font-size: 1.1rem;
    opacity: 0.9;
}

.api-key-section {
    display: flex;
    flex-direction: column;
    gap: 15px;
}

.api-key-input {
    display: flex;
    gap: 10px;
}

.api-key-field {
    padding: 12px 16px;
    border: none;
    border-radius: 8px;
    font-size: 14px;
    min-width: 300px;
}

.connection-status {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 14px;
}

.connection-status.connected {
    color: #28a745;
}

.dashboard-content {
    display: flex;
    flex-direction: column;
    gap: 40px;
}

.quick-actions {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
}

.action-card {
    padding: 30px;
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
}

.action-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

.action-card i {
    font-size: 3rem;
    color: #667eea;
    margin-bottom: 20px;
}

.action-card h3 {
    margin: 0 0 10px 0;
    color: #333;
}

.action-card p {
    margin: 0;
    color: #666;
}

.projects-section h2,
.recent-activity h2 {
    margin: 0 0 20px 0;
    color: #333;
    font-size: 1.5rem;
}

.projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 20px;
}

.project-card {
    background: white;
    border-radius: 12px;
    padding: 20px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    cursor: pointer;
    transition: all 0.3s ease;
}

.project-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.project-header {
    display: flex;
    align-items: center;
    gap: 15px;
    margin-bottom: 15px;
}

.project-icon i {
    font-size: 2rem;
    color: #667eea;
}

.project-info {
    flex: 1;
}

.project-name {
    margin: 0 0 5px 0;
    color: #333;
    font-size: 1.1rem;
}

.project-description {
    margin: 0;
    color: #666;
    font-size: 0.9rem;
}

.status-badge {
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 0.8rem;
    font-weight: 500;
    text-transform: capitalize;
}

.status-badge.active {
    background: #d4edda;
    color: #155724;
}

.status-badge.inactive {
    background: #f8d7da;
    color: #721c24;
}

.status-badge.archived {
    background: #e2e3e5;
    color: #383d41;
}

.project-details {
    display: flex;
    gap: 20px;
    margin-bottom: 15px;
}

.detail-item {
    display: flex;
    align-items: center;
    gap: 5px;
    color: #666;
    font-size: 0.9rem;
}

.project-actions {
    display: flex;
    gap: 10px;
}

.btn {
    padding: 8px 16px;
    border: none;
    border-radius: 6px;
    font-size: 14px;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 5px;
}

.btn-primary {
    background: #667eea;
    color: white;
}

.btn-primary:hover {
    background: #5a6fd8;
}

.btn-outline {
    background: transparent;
    color: #667eea;
    border: 1px solid #667eea;
}

.btn-outline:hover {
    background: #667eea;
    color: white;
}

.btn-sm {
    padding: 6px 12px;
    font-size: 12px;
}

.loading-spinner {
    text-align: center;
    padding: 40px;
    color: #666;
}

.spin {
    animation: spin 1s linear infinite;
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

.empty-state {
    text-align: center;
    padding: 60px 20px;
    color: #666;
}

.empty-state i {
    font-size: 4rem;
    color: #ddd;
    margin-bottom: 20px;
}

.activity-list {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.activity-item {
    display: flex;
    align-items: center;
    gap: 15px;
    padding: 20px;
    border-bottom: 1px solid #f0f0f0;
}

.activity-item:last-child {
    border-bottom: none;
}

.activity-icon i {
    font-size: 1.5rem;
    color: #667eea;
}

.activity-content {
    flex: 1;
}

.activity-text {
    margin: 0 0 5px 0;
    color: #333;
}

.activity-time {
    color: #666;
    font-size: 0.9rem;
}

.connection-required {
    text-align: center;
    padding: 80px 20px;
    color: #666;
}

.connection-content i {
    font-size: 4rem;
    color: #ddd;
    margin-bottom: 20px;
}

.api-key-help {
    text-align: left;
    max-width: 500px;
    margin: 30px auto 0;
    padding: 20px;
    background: #f8f9fa;
    border-radius: 8px;
}

.api-key-help h4 {
    margin: 0 0 15px 0;
    color: #333;
}

.api-key-help ol {
    margin: 0;
    padding-left: 20px;
}

.api-key-help li {
    margin-bottom: 8px;
    color: #555;
}

.loading-state {
    text-align: center;
    padding: 80px 20px;
    color: #666;
}

.loading-state .loading-spinner {
    padding: 40px;
}

.loading-state p {
    margin-top: 20px;
    font-size: 1.1rem;
}

/* Breadcrumb styles */
.breadcrumb-nav {
    margin: 20px 0;
}

.breadcrumb {
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;
    gap: 8px;
    align-items: center;
}

.breadcrumb-item {
    display: flex;
    align-items: center;
}

.breadcrumb-item a {
    color: #667eea;
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 5px;
}

.breadcrumb-item a:hover {
    text-decoration: underline;
}

.breadcrumb-item.active {
    color: #666;
}

/* Responsive design */
@media (max-width: 768px) {
    .dashboard-header {
        flex-direction: column;
        text-align: center;
        gap: 20px;
    }
    
    .api-key-input {
        flex-direction: column;
    }
    
    .api-key-field {
        min-width: auto;
    }
    
    .quick-actions {
        grid-template-columns: 1fr;
    }
    
    .projects-grid {
        grid-template-columns: 1fr;
    }
    
    .breadcrumb {
        flex-wrap: wrap;
    }
}
</style>

{{template "base/footer" .}}
